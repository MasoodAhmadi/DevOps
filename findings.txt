
Containers share certain resources with the host depending on how they are configured. For example, if containers are configured with "network_mode: host", they can share the host's network stack. Each container typically has its own isolated network namespace but can be assigned to user-defined Docker networks. Containers can also share volumes with the host for data persistence, which allows directories or files to be synchronized between the container and the host.

In this exercise, service 1 and service 2 are running on a docker bridge network, which means they share an isolated network, while only the specified ports are exposed to the host. Additionally, volumes or mounts can enable access to shared files between containers and hosts, although neither is explicitly used in this setup. Another important aspect of sharing is CPU and memory usage, which is limited to what is available on the host unless more resource constraints are imposed.